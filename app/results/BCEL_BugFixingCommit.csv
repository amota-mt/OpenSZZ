commitsSha;commitTs;commitComment;issueKey;issueOpen;issueClose;issueTitle
63919b288fe8ec5e9d0dac9e18b4a186acd76d63;2022-09-21T22:20:35.000+0900;bcel-363 enforce max_cp_entries in constantpoolgen and constantpool.dump #147;BCEL-363;2022-09-20T20:10:17.000+0900;2022-09-21T22:21:23.000+0900;[BCEL-363] ConstantPoolGen can generate constant pools that are too large
f3267cbcc900f80851d561bdd16b239d936947f5;2022-09-21T22:18:58.000+0900;bcel-363 enforce max_cp_entries in constantpoolgen and constantpool.dump (#147);BCEL-363;2022-09-20T20:10:17.000+0900;2022-09-21T22:21:23.000+0900;[BCEL-363] ConstantPoolGen can generate constant pools that are too large
f959849a37c8b08871cec6d6276ab152e6ed08ce;2020-06-02T08:01:40.000+0900;[bcel-339] throw illegalargumentexception, illegalstateexception, unsupportedoperationexception instead of runtimeexception.;BCEL-339;2020-06-02T08:00:24.000+0900;2020-06-02T08:02:13.000+0900;[BCEL-339] Throw IllegalArgumentException, IllegalStateException, UnsupportedOperationException instead of RuntimeException
bf06bdaec1aa40d2069bc72337f0105f7fdc1498;2020-06-02T07:25:22.000+0900;[bcel-338] org.apache.bcel.generic.instructionfactory.createinvoke() populates its internal constantpoolgen on bad input, then throws exception.;BCEL-338;2020-06-02T07:23:58.000+0900;2020-06-02T07:29:30.000+0900;[BCEL-338] org.apache.bcel.generic.InstructionFactory.createInvoke() populates its internal ConstantPoolGen on bad input, then throws exception
bed8f810c6a5fed63f22dfc4de780e46fc3683bb;2020-02-25T19:24:34.000+0900;javadoc fix for bcel-335 (#41);BCEL-335;2020-02-25T05:06:51.000+0900;2020-08-30T09:37:30.000+0900;[BCEL-335] Fix jdk 11 javadoc error
57142f1b2a99f1b691ba430a9cfef50ccd8a6cc0;2019-10-13T05:55:31.000+0900;fix bcel-329 attribute duplication (#34);BCEL-329;2019-10-12T02:22:08.000+0900;2020-08-30T09:36:23.000+0900;[BCEL-329] MethodGen duplicates some attributes
1d528f6cf7ea74db01a03d724f288dd97b2c3f35;2019-09-26T09:09:42.000+0900;[bcel-328] java.util.emptystackexception at org.apache.bcel.classfile.descendingvisitor.visitmodule (descendingvisitor.java:592).;BCEL-328;2019-09-26T09:08:44.000+0900;2019-09-26T09:10:53.000+0900;[BCEL-328] java.util.EmptyStackException at org.apache.bcel.classfile.DescendingVisitor.visitModule (DescendingVisitor.java:592)
4224c83d42502f37c781efe4108198b10f9075dd;2019-07-07T00:16:48.000+0900;[bcel-299] fix example src/examples/classdumper.java classdumper.processid().;BCEL-299;2017-11-04T22:03:25.000+0900;2019-07-07T03:50:19.000+0900;[BCEL-299] Fix example src/examples/ClassDumper.java ClassDumper.processID().
4d89da4f52f6ae26a4917ba79259e8c89c67eb77;2019-04-12T22:05:05.000+0900;[bcel-316] org.apache.bcel.classfile.attribute class and subclasses should not log to the console by default;BCEL-316;2019-04-12T22:02:44.000+0900;2019-04-12T22:05:54.000+0900;[BCEL-316] org.apache.bcel.classfile.Attribute class and subclasses should NOT log to the console by default
78f672a2c6bd6e21a731e982f8e495563280d7d9;2019-02-12T00:26:56.000+0900;[bcel-297] possible npe in override implementation of object.equals.;BCEL-297;2017-10-11T02:59:25.000+0900;2019-02-12T00:27:24.000+0900;[BCEL-297] Possible NPE in override implementation of Object.equals
45da20f49abafa125ff4f616e8312b89fbd1f139;2019-02-12T00:26:03.000+0900;[bcel-297] fix npe in bcelcomparator concrete implementations. (#20);BCEL-297;2017-10-11T02:59:25.000+0900;2019-02-12T00:27:24.000+0900;[BCEL-297] Possible NPE in override implementation of Object.equals
190dee5fa3b5374f95ae8b3673705802789ed0a7;2019-02-12T00:11:41.000+0900;[bcel-267] race conditions on static fields in branchhandle and (#23);BCEL-267;2015-09-30T05:12:42.000+0900;2019-02-12T00:23:15.000+0900;[BCEL-267] Race conditions on static fields in BranchHandle and InstructionHandle
a2da1049443db9db3e2c06cff58463fe6cddb978;2018-07-28T14:00:45.000+0900;[bcel-304] classpath.getclassfile does not work with java 9 and higher. sort.;BCEL-304;2018-07-18T03:53:36.000+0900;2018-07-28T14:01:57.000+0900;[BCEL-304] ClassPath.getClassFile() and friends do not work with JDK 9 and higher
bf30b1f2af61a37d8e1215e1af6022ede913dc2d;2018-07-28T14:00:21.000+0900;[bcel-304] classpath.getclassfile does not work with java 9 and higher.;BCEL-304;2018-07-18T03:53:36.000+0900;2018-07-28T14:01:57.000+0900;[BCEL-304] ClassPath.getClassFile() and friends do not work with JDK 9 and higher
4f30fa5358a7712bbaba7e25d97166d9b4a0f0a0;2017-10-17T05:34:31.000+0900;[bcel-295] fix local variable live range length. use less verbose code.;BCEL-295;2017-10-11T00:17:56.000+0900;2017-12-03T05:25:32.000+0900;[BCEL-295] Incorrect live range information in LocalVariableGen
d700649c1748cdec25ce871925d80a1356e3147b;2017-10-17T05:32:38.000+0900;[bcel-295] fix local variable live range length;BCEL-295;2017-10-11T00:17:56.000+0900;2017-12-03T05:25:32.000+0900;[BCEL-295] Incorrect live range information in LocalVariableGen
0d33e877b1642b1bb630415304b8d01de2ce427e;2017-10-17T05:32:13.000+0900;[bcel-295] fix local variable live range length;BCEL-295;2017-10-11T00:17:56.000+0900;2017-12-03T05:25:32.000+0900;[BCEL-295] Incorrect live range information in LocalVariableGen
df7a37858bdf7c465d6ba96637558695e42e2fe9;2017-09-13T01:36:55.000+0900;bcel-286: utility.signaturetostring fails if a method has multiple type arguments. thanks to mark roberts.;BCEL-286;2017-02-16T00:05:30.000+0900;2017-09-13T01:37:24.000+0900;[BCEL-286] Utility.signatureToString fails if a method has multiple type arguments
54a95d899854ad5a0a7b896f99cd8ba68b89d471;2017-08-31T04:34:23.000+0900;bcel-276: localvariabletypetable is not updated. updated fix thanks to mark roberts. this closes #12 from github.;BCEL-276;2016-07-20T19:14:38.000+0900;2017-08-31T04:34:43.000+0900;[BCEL-276] LocalVariableTypeTable is not updated. 
93c12bbb6d22a165a407b6184cdb40545f86c683;2017-08-31T04:28:20.000+0900;bcel-287: iinc does not handle -128 properly. thanks to mark roberts;BCEL-287;2017-02-25T06:55:15.000+0900;2017-08-31T04:28:44.000+0900;[BCEL-287] IINC does not handle -128 properly
efc4809b7b73febc18cdd8976ff8e9d6d4537ade;2017-08-31T04:22:35.000+0900;bcel-283: support for stackmap should be different from stackmaptable. thanks to mark roberts;BCEL-283;2016-11-10T02:04:11.000+0900;2017-08-31T04:23:21.000+0900;[BCEL-283] Support for StackMap should be different from StackMapTable
5df07263f9fd644e8045569b82fce08b50c008a2;2017-05-19T15:42:30.000+0900;bcel-289: changes.xml entry;BCEL-289;2017-05-16T23:52:46.000+0900;2017-05-19T15:43:57.000+0900;[BCEL-289] Crash when parsing constructor of inner classes with parameters annotated
e74df2c0e90e5e4ee92a0d45fcc6f5db5958861a;2017-05-19T15:41:16.000+0900;bcel-289: iterate through parameter annotation entries using the right limit;BCEL-289;2017-05-16T23:52:46.000+0900;2017-05-19T15:43:57.000+0900;[BCEL-289] Crash when parsing constructor of inner classes with parameters annotated
c96a3e5a40040ef43e0a51935a368458763d3424;2016-09-06T15:38:18.000+0900;bcel-276: localvariabletypetable is not updated. thanks to sam yoon. this also fixes #10 from github.;BCEL-276;2016-07-20T19:14:38.000+0900;2017-08-31T04:34:43.000+0900;[BCEL-276] LocalVariableTypeTable is not updated. 
7ceb5a6b8236517d708d7965f4873344c5630969;2016-07-29T17:10:05.000+0900;bcel-277: resolving the string representation of a constant throws nosuchelementexception in case of constant_nameandtype constant. thanks to sam yoon. this also closes #9 from github.;BCEL-277;2016-07-26T03:37:10.000+0900;2016-07-29T17:10:34.000+0900;[BCEL-277] Resolving the String representation of a constant throws NoSuchElementException in case of CONSTANT_NameAndType constant.
cc1c0fbf13f7757a8fbc696653aced5f8cfd4005;2016-06-18T22:57:51.000+0900;add bcel-237 to changes.xml and release-notes since it seems to have been fixed already;BCEL-237;2015-08-12T21:00:16.000+0900;2016-06-18T23:50:33.000+0900;[BCEL-237] non-empty final arrays should be private as they are mutable
2f2698fa5739eba1cdc3bdf8299a754fb98ae871;2016-06-15T02:02:22.000+0900;bcel-243 type.gettype() needs to understand typevariablesignature(s);BCEL-243;2015-08-14T02:10:48.000+0900;2016-07-03T01:35:00.000+0900;[BCEL-243] Type.getType() needs to understand TypeVariableSignature(s)
4b46a1595c4c8688644549b3cd762819f4ccfac0;2016-06-10T21:07:25.000+0900;bcel-273 - regressions running findbugs on bcel6 reverted to previous code;BCEL-273;2016-06-06T22:15:18.000+0900;2016-06-10T21:08:10.000+0900;[BCEL-273] Regressions running FindBugs on BCEL6
cc50f64aa8598728365f282056035cfc094e7bbd;2016-06-01T13:46:44.000+0900;[bcel-271] fconst pattern does not include fconst_2.;BCEL-271;2016-04-05T08:43:34.000+0900;2016-06-01T13:47:11.000+0900;[BCEL-271] FCONST pattern does not include FCONST_2
07e0698ed6961ac535a8971e52d61e53f877f58e;2016-02-05T15:09:42.000+0900;issue bcel-269: make sure instruction list gets completely written, patch by emopers;BCEL-269;2016-02-05T13:03:40.000+0900;2019-07-07T09:23:40.000+0900;[BCEL-269] Flushing DataOutputStream before calling toByteArray on the underlying ByteArrayOutputStream
0b85abad6a951191875d8cb2af84a7da804c30c9;2015-09-12T20:22:02.000+0900;bcel-264 add missing node.accept() implementations (constantmethodhandle, constantmethodtype, parameterannotationentry);BCEL-264;2015-09-12T19:59:52.000+0900;2015-09-12T20:44:23.000+0900;[BCEL-264] Add missing Node.accept() implementations (ConstantMethodHandle, ConstantMethodType, ParameterAnnotationEntry)
4374b673a2b2ebbc7042c062b4f87ab49dd14930;2015-08-28T08:14:46.000+0900;bcel-195 addition of hashcode() to generic/instruction.java breaks targeters. never make branchinstructions compare equal revert short-cut equality check because that would allow a single bi to be shared.;BCEL-195;2015-02-05T06:34:58.000+0900;2016-06-15T01:42:56.000+0900;[BCEL-195] addition of hashCode() to generic/Instruction.java breaks Targeters
80ed7676093c6ee19c271fd9414d360b6a8d1712;2015-08-28T08:08:28.000+0900;bcel-195 addition of hashcode() to generic/instruction.java breaks targeters. never make distinct branchinstructions compare equal;BCEL-195;2015-02-05T06:34:58.000+0900;2016-06-15T01:42:56.000+0900;[BCEL-195] addition of hashCode() to generic/Instruction.java breaks Targeters
06d969a8fe228de6a637e832743cf6df518fceb0;2015-08-28T07:27:01.000+0900;bcel-260 classdumper example duplicates field attribute types;BCEL-260;2015-08-28T06:00:12.000+0900;2015-08-28T07:27:39.000+0900;[BCEL-260] ClassDumper example duplicates field attribute types
7e303218009724e91ed7d3a008f89e8659567072;2015-08-27T02:59:54.000+0900;bcel-258 no tests to check the output of dump methods added test for generic package dump methods;BCEL-258;2015-08-26T19:56:17.000+0900;2015-08-27T03:04:21.000+0900;[BCEL-258] No tests to check the output of dump methods
b227b3b6aa81ad319bdfe91a7611b957f0beffdf;2015-08-27T02:58:31.000+0900;bcel-257 invokespecial, invokestatic, invokevirtual need to define dump() methods;BCEL-257;2015-08-26T19:32:25.000+0900;2015-08-27T03:06:13.000+0900;[BCEL-257] INVOKESPECIAL, INVOKESTATIC, INVOKEVIRTUAL need to define dump() methods
5627e45ac3b893b7b8f69566738f8f09167fc87a;2015-08-26T23:52:09.000+0900;bcel-258 no tests to check the output of dump methods added (optional) test to check the dump methods in the classfile package;BCEL-258;2015-08-26T19:56:17.000+0900;2015-08-27T03:04:21.000+0900;[BCEL-258] No tests to check the output of dump methods
2c76cda4b5a6032129b27c6e4806c5c683e5e715;2015-08-25T04:47:28.000+0900;bcel-254 two more methods that would be nice to be public. sample class using bcel to produce output like javap;BCEL-254;2015-08-22T03:48:51.000+0900;2015-08-25T04:49:04.000+0900;[BCEL-254] Two more methods that would be nice to be public.
bf300c3e8f03bf9aa1ff66195d79cafd8a626cb0;2015-08-25T04:46:43.000+0900;bcel-254 two more methods that would be nice to be public.;BCEL-254;2015-08-22T03:48:51.000+0900;2015-08-25T04:49:04.000+0900;[BCEL-254] Two more methods that would be nice to be public.
a375a02891369b9f0204e33a25ebfad424d642a7;2015-08-24T07:36:37.000+0900;bcel-245 type class includes constants that reference subclasses;BCEL-245;2015-08-14T04:19:07.000+0900;2015-08-24T07:37:07.000+0900;[BCEL-245] Type class includes constants that reference subclasses
c4560eabcd60cd0f0e211978036519db748360fa;2015-08-24T01:52:06.000+0900;bcel-253 pass 3b verifier is too strict.;BCEL-253;2015-08-22T03:16:44.000+0900;2015-08-24T07:28:24.000+0900;[BCEL-253] Pass 3b verifier is too strict.
21feca713e75b1c486d9fca07aa9aea19410d72c;2015-08-21T21:33:44.000+0900;bcel-202 stackmaptableentry.copy() needs to be deep;BCEL-202;2015-02-05T09:10:04.000+0900;2015-08-22T06:33:10.000+0900;[BCEL-202] StackMap[Table]Entry.copy() needs to be deep Improved support for StackMaps
36066a5695899b6df3272e469658f56827fac461;2015-08-21T20:32:35.000+0900;bcel-251 pass3averifier visitanewarray() does not allow 255 array dimensions;BCEL-251;2015-08-21T20:20:35.000+0900;2015-08-24T07:31:00.000+0900;[BCEL-251] Pass3aVerifier visitANEWARRAY() does not allow 255 array dimensions
c2f5b0afe28af49f3b0360661545d52df70eac7e;2015-08-20T21:19:42.000+0900;bcel-249 check for max short seems wrong;BCEL-249;2015-08-20T08:22:46.000+0900;2015-08-20T21:20:30.000+0900;[BCEL-249] Check for max Short seems wrong
f1b42f447342224bec53e1c991057432f7365102;2015-08-20T20:30:47.000+0900;bcel-127 document that instruction factory returns singleton instances;BCEL-127;2008-11-21T12:14:39.000+0900;2022-10-27T20:33:25.000+0900;[BCEL-127] Document that Instruction Factory returns singleton instances
7f98a3a249cd1dea6c4113856e34350aa32ee84d;2015-08-20T20:28:00.000+0900;bcel-127 document that instruction factory returns singleton instances;BCEL-127;2008-11-21T12:14:39.000+0900;2022-10-27T20:33:25.000+0900;[BCEL-127] Document that Instruction Factory returns singleton instances
12fa860b66d1e7ea61d1e2297edcd59857ce0c66;2015-08-18T19:17:53.000+0900;revert most of bcel-232 re-instate "unused" setters;BCEL-232;2015-08-10T22:59:51.000+0900;2015-08-18T19:20:15.000+0900;[BCEL-232] Make mutable fields private.
3eb7299f4fad1fd95c13c81c7b67cdf2cc86b93d;2015-08-16T18:25:33.000+0900;bcel-110 problem with jaxb if the bcel classloader is used;BCEL-110;2007-08-13T13:56:33.000+0900;2022-10-27T20:33:25.000+0900;[BCEL-110] Problem with JAXB if the bcel classloader is used
9f307d3947513e9008eda54b9d9dfdcdf76b4031;2015-08-16T16:51:45.000+0900;bcel-110 problem with jaxb if the bcel classloader is used;BCEL-110;2007-08-13T13:56:33.000+0900;2022-10-27T20:33:25.000+0900;[BCEL-110] Problem with JAXB if the bcel classloader is used
b4d4d168b6077c8c6a35257dee0967fbb85398c5;2015-08-15T07:22:47.000+0900;bcel-79 - add test to show the problem, and re-fix it;BCEL-79;2006-06-01T05:43:51.000+0900;2015-08-15T07:25:47.000+0900;[BCEL-79] java.lang.ClassFormatError: LVTT entry for 'local' in class file org/shiftone/jrat/test/dummy/CrashTestDummy does not match any LVT entry
5292a12753c590a62a21f991057db3c4ed5d3775;2015-08-14T07:04:00.000+0900;bcel-110 problem with jaxb if the bcel classloader is used remove the problematic class;BCEL-110;2007-08-13T13:56:33.000+0900;2022-10-27T20:33:25.000+0900;[BCEL-110] Problem with JAXB if the bcel classloader is used
35ac47dc112c69259622bf1f702aa809c5307ecd;2015-08-14T06:21:12.000+0900;bcel-208 need to check for an empty instructionlist;BCEL-208;2015-02-06T01:28:34.000+0900;2015-08-14T06:23:05.000+0900;[BCEL-208] Need to check for an empty InstructionList
ecdc6f1f11178c29c812ecd5725c2a2818d3f255;2015-08-14T04:50:41.000+0900;bcel-217 long type instructions are not searched by instructionfinder using regular expression;BCEL-217;2015-04-18T05:14:14.000+0900;2015-08-14T04:52:01.000+0900;[BCEL-217] long type instructions are not searched by InstructionFinder using regular expression
03946285e4d8d812b3485e036de69226f7fd4345;2015-08-13T08:53:24.000+0900;bcel-232 make mutable fields private.;BCEL-232;2015-08-10T22:59:51.000+0900;2015-08-18T19:20:15.000+0900;[BCEL-232] Make mutable fields private.
4227c5cf0ad132e1238ea556718d9bd6a3a592a2;2015-08-13T08:30:09.000+0900;bcel-232 make mutable fields private.;BCEL-232;2015-08-10T22:59:51.000+0900;2015-08-18T19:20:15.000+0900;[BCEL-232] Make mutable fields private.
8e29a71464b8dd555a9a9bb428e2812d63a8e089;2015-08-13T08:19:09.000+0900;bcel-232 make mutable fields private.;BCEL-232;2015-08-10T22:59:51.000+0900;2015-08-18T19:20:15.000+0900;[BCEL-232] Make mutable fields private.
4b75fdd1f345616a2acc62393d626e5094ca2d44;2015-08-13T07:34:54.000+0900;bcel-232 make mutable fields private.;BCEL-232;2015-08-10T22:59:51.000+0900;2015-08-18T19:20:15.000+0900;[BCEL-232] Make mutable fields private.
14fdded02c630bb89b9d9ff3d7168da3b54f8617;2015-08-13T03:34:18.000+0900;bcel-237 non-empty final arrays should be private as they are mutable;BCEL-237;2015-08-12T21:00:16.000+0900;2016-06-18T23:50:33.000+0900;[BCEL-237] non-empty final arrays should be private as they are mutable
9325aac806818a7993d42e82dc57814d8725f014;2015-08-13T02:55:43.000+0900;bcel-237 non-empty final arrays should be private as they are mutable;BCEL-237;2015-08-12T21:00:16.000+0900;2016-06-18T23:50:33.000+0900;[BCEL-237] non-empty final arrays should be private as they are mutable
db84d4027bf3c4e2ea9f3c011e10fee7866235a4;2015-08-13T00:29:23.000+0900;bcel-239 interfaces should not be used to define constants;BCEL-239;2015-08-12T21:14:27.000+0900;2015-08-13T00:30:54.000+0900;[BCEL-239] Interfaces should not be used to define constants
0af0fb3158488b64b4b02a794a757891bb636de9;2015-08-12T23:59:42.000+0900;bcel-239 interfaces should not be used to define constants convert instructionconstants to a class;BCEL-239;2015-08-12T21:14:27.000+0900;2015-08-13T00:30:54.000+0900;[BCEL-239] Interfaces should not be used to define constants
e9c4b03698ac997267ba187e731a9a100ceb51cb;2015-08-12T22:59:45.000+0900;bcel-232 make mutable fields private.;BCEL-232;2015-08-10T22:59:51.000+0900;2015-08-18T19:20:15.000+0900;[BCEL-232] Make mutable fields private.
da5f54665dc13c7ccef9b95d7fe58d651248eefd;2015-08-12T22:58:52.000+0900;bcel-232 make mutable fields private.;BCEL-232;2015-08-10T22:59:51.000+0900;2015-08-18T19:20:15.000+0900;[BCEL-232] Make mutable fields private.
4a2fba25228536501c202754c9cb7a442c1e496d;2015-08-12T21:46:38.000+0900;bcel-239 interfaces should not be used to define constants convert exceptionconstants to class (it was not implemented anywhere);BCEL-239;2015-08-12T21:14:27.000+0900;2015-08-13T00:30:54.000+0900;[BCEL-239] Interfaces should not be used to define constants
0ea7ebe90701a08f8417816cb3715de011f01420;2015-08-12T19:54:45.000+0900;bcel-234 code must not swallow throwable;BCEL-234;2015-08-11T01:19:57.000+0900;2015-08-12T19:56:04.000+0900;[BCEL-234] Code must not swallow Throwable
31799e060afc7998ac5421ab682633ec3568b3bc;2015-08-11T14:19:31.000+0900;bcel-226 fix rat messages;BCEL-226;2015-08-10T22:49:40.000+0900;2015-08-11T14:19:40.000+0900;[BCEL-226] FIx RAT messages
bc6483cdbc2d1f65aceadb7de95417a6ecc45969;2015-07-25T00:28:32.000+0900;[bcel-219] make org.apache.bcel.classfile.constantpool.constantpool(datainput) public.;BCEL-219;2015-07-25T00:26:31.000+0900;2015-08-20T16:48:33.000+0900;[BCEL-219] Make org.apache.bcel.classfile.ConstantPool.ConstantPool(DataInput) public
763333c2572c5ebcb8f1d09c32876da987741c54;2015-07-20T06:10:46.000+0900;bcel-209 bug fixes and improvements to invokedynamic and bootstrapmethods implementation;BCEL-209;2015-02-06T03:29:11.000+0900;2015-07-20T06:11:23.000+0900;[BCEL-209] Bug fixes and improvements to InvokeDynamic and BootStrapMethods implementation
48426e0049b01d86b2af3b0cd4c7452a98bbcaaf;2015-07-18T13:56:40.000+0900;bcel-187 verification error when an invoke references a method defined in superclass;BCEL-187;2015-01-05T22:50:39.000+0900;2015-07-18T13:57:07.000+0900;[BCEL-187] Verification error when an invoke references a method defined in superclass
9a09f41b03df238043e0eda59d5cfa11cdd36523;2015-03-08T04:38:34.000+0900;fix bcel-188 patch by jérôme leroux correct verification of the return value of a method.;BCEL-188;2015-01-06T20:41:33.000+0900;2015-03-08T04:39:31.000+0900;[BCEL-188] Invalid verification of the returned value of a method
5f029f691332139ea0bb0e938b90799d74806a93;2015-03-07T09:23:06.000+0900;the verifier now checks if methods with a void return type attempt to return an object. thanks to jérôme leroux (bcel-184);BCEL-184;2014-12-17T18:32:08.000+0900;2015-03-07T09:24:25.000+0900;[BCEL-184] JustIce verifier does not check correctly the returned value of a method
91af4178c1ff8b70b7de794ae28d539821f01d03;2015-02-21T08:17:15.000+0900;javadoc improvement for instructiontargeter, thanks to thiago bartolomei (bcel-161);BCEL-161;2012-01-10T01:30:23.000+0900;2015-02-21T08:55:17.000+0900;[BCEL-161] InstructionTargeters not being properly cleaned up.
c070c23750e4720fe44b92237b2b55559619e8ac;2015-02-20T23:52:39.000+0900;methodgen.removelocalvariable/s now remove the associated targetters. thanks to mark roberts (bcel-207);BCEL-207;2015-02-06T01:23:57.000+0900;2015-02-20T23:53:43.000+0900;[BCEL-207] RemoveLocalVariable(s) doesn't remove the associated Targetters.
1fdd06ce9f554eb3c0a5e9d3c1288cf039c88a90;2015-02-20T16:58:15.000+0900;removed an unused loop in classpath (bcel-176);BCEL-176;2014-05-31T07:58:10.000+0900;2015-02-20T16:59:25.000+0900;[BCEL-176] util.ClassPath.getClassFile(String name, String suffix) - unused loop variable
67dfdf60f5f8ccb8ed910bfe9d1cdc6e84f0db36;2015-02-20T10:23:20.000+0900;refactored javaclass and fieldormethod to avoid a code duplication in the getannotationentries methods. thanks to charles honton (bcel-165);BCEL-165;2012-03-24T03:47:05.000+0900;2022-10-27T20:33:25.000+0900;[BCEL-165] getAnnotationEntries methods in JavaClass and FieldOrMethod duplicate code
964c0c8fd6abdb4c32c050db3f129edef7232cbe;2015-02-05T23:46:49.000+0900;moved the copy() method of runtime*parameterannotations in the parent class (bcel-203);BCEL-203;2015-02-05T23:32:21.000+0900;2015-02-05T23:48:33.000+0900;[BCEL-203] Incorrect return types in Runtime...ParameterAnnotations
d2883e2ade18d07cb76b0bf99d1b9a0aa66afdb2;2015-02-05T06:53:42.000+0900;removed the index variable from the localvariablegens hash code, thanks to mark roberts (bcel-194);BCEL-194;2015-02-05T06:08:20.000+0900;2015-02-05T06:54:25.000+0900;[BCEL-194] LocalVariableGen hashCode() function is incorrrect.
8dab4e845ccbdb0a0f287c38ceafd7d15e417c06;2015-01-17T21:47:01.000+0900;bcel-186 performance degradation with the utf8 cache oops - forget the default value;BCEL-186;2014-12-30T23:59:30.000+0900;2015-02-05T03:38:09.000+0900;[BCEL-186] Performance degradation with the UTF8 cache
ae887bde4df5b1f61ff418635a51925d2d94aacc;2015-01-17T20:30:31.000+0900;bcel-186 performance degradation with the utf8 cache tidy up and simplify caching code in case it can be made performant might still be useful as a way of saving memory in some cases;BCEL-186;2014-12-30T23:59:30.000+0900;2015-02-05T03:38:09.000+0900;[BCEL-186] Performance degradation with the UTF8 cache
fbcd823d35677e12d3bc37db531f3f18cdb17535;2015-01-17T07:58:51.000+0900;bcel-186 performance degradation with the utf8 cache getinstance no longer uses the cache;BCEL-186;2014-12-30T23:59:30.000+0900;2015-02-05T03:38:09.000+0900;[BCEL-186] Performance degradation with the UTF8 cache
75a8d8c69a3da99e6ab553b4f9947aac44af6928;2014-09-30T21:08:10.000+0900;[bcel-181] org.apache.bcel.util.classloaderrepository.loadclass(string) leaks input streams.;BCEL-181;2014-09-30T20:54:09.000+0900;2014-09-30T22:33:18.000+0900;[BCEL-181] org.apache.bcel.util.ClassLoaderRepository.loadClass(String) leaks input streams
f896e6c9eb751b24de5637ab86731068fa0e2096;2014-07-29T05:33:34.000+0900;fix bcel-177 methodparameter parameter count is one byte, not two.;BCEL-177;2014-07-29T05:30:08.000+0900;2014-07-29T05:34:06.000+0900;[BCEL-177] MethodParameters should read 1 byte not two for parameter count
86081411f480dd6cf8c7cbca74b9b8fa87f87992;2014-04-23T23:26:40.000+0900;updated the links to the jasmin homepage (bcel-152);BCEL-152;2011-04-02T02:31:52.000+0900;2022-10-27T20:33:25.000+0900;[BCEL-152] Incorrect link for Jasmin assembler language
fa9a90ca68c706a27da33eaf4eb06a562b354d21;2014-04-23T20:10:29.000+0900;fixed the validation error message when a non abstract method is found in an interface (bcel-174);BCEL-174;2014-04-20T16:46:59.000+0900;2014-04-23T23:06:24.000+0900;[BCEL-174] Verification of interfaces with default methods fails with Java 8
